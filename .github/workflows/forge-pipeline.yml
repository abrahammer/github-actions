name: forge

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: adsk-demo

jobs:
  build-docker:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build Docker image
      run: docker build . --file Dockerfile
   
  push-docker:
    needs: build-docker

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v1

      - name: Build image
        run: docker build . --file Dockerfile --tag image

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  
  custom-action: 
    runs-on: ubuntu-latest
    steps:
    - uses: abrahammer/adsk-action@master
      with:
        service_id: 'ACME'
        version: 'latest'
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    needs: [build-docker]
    steps:
      - name: Test Results
        run: |
          mkdir ../artifacts
          echo ${{ matrix.os }} > ../artifacts/${{ matrix.os }}-test-results.txt
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ matrix.os }}
          path: ../artifacts
  deploy:
    runs-on: [ubuntu-latest]
    needs: [test]
    if: github.event_name == 'push'
    steps:
      - uses: abrahammer/adsk-action@master
        with:
          service_id: 'ACME'
          version: 'latest'
